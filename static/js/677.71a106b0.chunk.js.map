{"version":3,"file":"static/js/677.71a106b0.chunk.js","mappings":"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","sources":["../node_modules/@emailjs/browser/es/store/store.js","../node_modules/@emailjs/browser/es/utils/validateParams.js","../node_modules/@emailjs/browser/es/models/EmailJSResponseStatus.js","../node_modules/@emailjs/browser/es/api/sendPost.js","../node_modules/@emailjs/browser/es/index.js","../node_modules/@emailjs/browser/es/methods/sendForm/sendForm.js","Pages/Contact.js"],"sourcesContent":["export const store = {\n    _origin: 'https://api.emailjs.com',\n};\n","export const validateParams = (publicKey, serviceID, templateID) => {\n    if (!publicKey) {\n        throw 'The public key is required. Visit https://dashboard.emailjs.com/admin/account';\n    }\n    if (!serviceID) {\n        throw 'The service ID is required. Visit https://dashboard.emailjs.com/admin';\n    }\n    if (!templateID) {\n        throw 'The template ID is required. Visit https://dashboard.emailjs.com/admin/templates';\n    }\n    return true;\n};\n","export class EmailJSResponseStatus {\n    constructor(httpResponse) {\n        this.status = httpResponse ? httpResponse.status : 0;\n        this.text = httpResponse ? httpResponse.responseText : 'Network Error';\n    }\n}\n","import { EmailJSResponseStatus } from '../models/EmailJSResponseStatus';\nimport { store } from '../store/store';\nexport const sendPost = (url, data, headers = {}) => {\n    return new Promise((resolve, reject) => {\n        const xhr = new XMLHttpRequest();\n        xhr.addEventListener('load', ({ target }) => {\n            const responseStatus = new EmailJSResponseStatus(target);\n            if (responseStatus.status === 200 || responseStatus.text === 'OK') {\n                resolve(responseStatus);\n            }\n            else {\n                reject(responseStatus);\n            }\n        });\n        xhr.addEventListener('error', ({ target }) => {\n            reject(new EmailJSResponseStatus(target));\n        });\n        xhr.open('POST', store._origin + url, true);\n        Object.keys(headers).forEach((key) => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n        xhr.send(data);\n    });\n};\n","import { init } from './methods/init/init';\nimport { send } from './methods/send/send';\nimport { sendForm } from './methods/sendForm/sendForm';\nexport { init, send, sendForm };\nexport default {\n    init,\n    send,\n    sendForm,\n};\n","import { store } from '../../store/store';\nimport { validateParams } from '../../utils/validateParams';\nimport { sendPost } from '../../api/sendPost';\nconst findHTMLForm = (form) => {\n    let currentForm;\n    if (typeof form === 'string') {\n        currentForm = document.querySelector(form);\n    }\n    else {\n        currentForm = form;\n    }\n    if (!currentForm || currentForm.nodeName !== 'FORM') {\n        throw 'The 3rd parameter is expected to be the HTML form element or the style selector of form';\n    }\n    return currentForm;\n};\n/**\n * Send a form the specific EmailJS service\n * @param {string} serviceID - the EmailJS service ID\n * @param {string} templateID - the EmailJS template ID\n * @param {string | HTMLFormElement} form - the form element or selector\n * @param {string} publicKey - the EmailJS public key\n * @returns {Promise<EmailJSResponseStatus>}\n */\nexport const sendForm = (serviceID, templateID, form, publicKey) => {\n    const uID = publicKey || store._userID;\n    const currentForm = findHTMLForm(form);\n    validateParams(uID, serviceID, templateID);\n    const formData = new FormData(currentForm);\n    formData.append('lib_version', '3.10.0');\n    formData.append('service_id', serviceID);\n    formData.append('template_id', templateID);\n    formData.append('user_id', uID);\n    return sendPost('/api/v1.0/email/send-form', formData);\n};\n","import React, { useRef } from \"react\";\nimport { useTranslation } from 'react-i18next';\nimport emailjs from '@emailjs/browser';\n\nimport \"../styles/pages/contact.scss\";\n\nconst Contact = () => {\n  const { t } = useTranslation('translation');\n  const form = useRef();\n  const sendEmail = (e) => { \n    e.preventDefault();\n    emailjs.sendForm('service_o3t2d3w', 'template_dnw18lh', form.current, 'kphMJBi_3SmRLn9AC')\n    .then((response) => {\n        alert('Great! Sending is success!ðŸ¥°')\n    }, (error) => { \n        alert('OMG! Sending got error!ðŸ˜¢')\n    } );\n  }\n\n  return (\n    <section id=\"contact\" className=\"container\" name=\"contact\">\n      <h2 className=\"bold en\">Contact</h2>\n      <div className=\"contact_box\">\n        <div className=\"sendmail_form\">\n          <form ref={form} onSubmit={sendEmail}>\n            <fieldset>\n              <legend className=\"blind\">Send Mail</legend>\n              <label htmlFor=\"name\" className=\"blind\" >Name</label>\n              <input type=\"text\" name=\"from_name\" id=\"from_name\" placeholder=\"Your name\" required/>\n              <label htmlFor=\"e-mail\" className=\"blind\">\n                E-mail Address\n              </label>\n              <input type=\"email\" name=\"mailaddr\" id=\"e-mail\" placeholder=\"Your address ( example@abc.com )\" required/>\n              <label htmlFor=\"message\" className=\"blind\">\n                Message\n              </label>\n              <textarea id=\"message\" name=\"message\" cols=\"30\" rows=\"10\" placeholder=\"Message\" required></textarea>\n              <div className=\"btns\">\n                <input id=\"reset\" type=\"reset\" value=\"Reset\" />\n                <input id=\"submit\" type=\"submit\" value=\"Send\" />\n              </div>\n            </fieldset>\n          </form>\n        </div>\n        <div className=\"final_greet\">\n          <div className=\"thanks\">\n            <span className=\"thanks_greets en\">Thanks for your watching.</span>\n            <p className=\"final_thanks \">\n              {t('thanksto')}{t('thanksto1')}\n            </p>\n          </div>\n          <div className=\"link_set\">\n            <a href=\"mailto:alchemist0228@gmail.com\">\n              <span className=\"ico\">\n                <img src={process.env.PUBLIC_URL + \"/assets/svgs/email-svgrepo-com.svg\"} alt=\"Another_mail\" />\n              </span>\n              <span className=\"label\">another e-mail</span>\n            </a>\n            <a href=\"https://github.com/ssy0228\" target=\"_blank\" rel=\"noopner noreferrer\">\n              <span className=\"ico\">\n                <img src={process.env.PUBLIC_URL + \"/assets/svgs/icons8-github-48.svg\"} alt=\"github-logo\" />\n              </span>\n              <span className=\"label\">Github</span>\n            </a>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact;\n"],"names":["store","_origin","validateParams","publicKey","serviceID","templateID","EmailJSResponseStatus","httpResponse","this","status","text","responseText","sendPost","url","data","headers","Promise","resolve","reject","xhr","XMLHttpRequest","addEventListener","target","responseStatus","open","Object","keys","forEach","key","setRequestHeader","send","form","uID","_userID","currentForm","document","querySelector","nodeName","findHTMLForm","formData","FormData","append","t","useTranslation","useRef","id","className","name","ref","onSubmit","e","preventDefault","emailjs","current","then","response","alert","error","htmlFor","type","placeholder","required","cols","rows","value","href","src","process","alt","rel"],"sourceRoot":""}